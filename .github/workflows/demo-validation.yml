name: Demo Validation

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run daily at 6 AM UTC
    - cron: '0 6 * * *'

jobs:
  validate-demos:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y xvfb

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Install package
      run: |
        pip install -e .

    - name: Validate installation test
      run: |
        export PYTHONPATH="${PYTHONPATH}:$(pwd)"
        python test_installation.py

    - name: Validate quick test
      run: |
        export PYTHONPATH="${PYTHONPATH}:$(pwd)"
        python quick_test.py

    - name: Test CLI functionality
      run: |
        export PYTHONPATH="${PYTHONPATH}:$(pwd)"
        python run_cli.py --help || echo "CLI help test completed"

    - name: Test app launch (dry run)
      run: |
        export PYTHONPATH="${PYTHONPATH}:$(pwd)"
        timeout 30s python run_app.py --help || echo "App help test completed"

    - name: Validate all visualization demos
      run: |
        export PYTHONPATH="${PYTHONPATH}:$(pwd)"
        export MPLBACKEND=Agg
        xvfb-run -a python -c "
        print('Testing visualization demos...')
        from visualizations.demo import (
            run_basic_demo,
            run_scientific_demo,
            run_comparative_demo,
            run_advanced_demo
        )

        try:            print('✓ Running basic demo...')
            run_basic_demo()
            
            print('✓ Running scientific demo...')
            run_scientific_demo()
            
            print('✓ Running comparative demo...')
            run_comparative_demo()
            
            print('✓ Running advanced demo...')
            run_advanced_demo()
            
            print('All demos completed successfully!')
        except Exception as e:
            print(f'Demo validation failed: {e}')
            raise
        "

    - name: Test individual modules
      run: |
        export PYTHONPATH="${PYTHONPATH}:$(pwd)"
        export MPLBACKEND=Agg
        xvfb-run -a python -c "
        print('Testing individual visualization modules...')

        modules_to_test = [
            'visualizations.charts',
            'visualizations.heatmaps',
            'visualizations.networks',
            'visualizations.scientific',
            'visualizations.comparative',
            'visualizations.animations',
            'visualizations.interactive',
            'visualizations.maps',
            'visualizations.dashboards',
            'visualizations.export'
        ]

        for module in modules_to_test:            try:
                __import__(module)
                print(f'Module {module} imports successfully')
            except ImportError as e:
                print(f'Module {module} import failed: {e}')
            except Exception as e:
                print(f'Module {module} error: {e}')

        print('Module import validation completed.')
        "

    - name: Validate core engine
      run: |
        export PYTHONPATH="${PYTHONPATH}:$(pwd)"
        python -c "
        print('Testing core engine...')        try:
            from eles_core.engine import SimulationEngine
            engine = SimulationEngine()
            print('Core engine initialization successful')
        except Exception as e:
            print(f'Core engine test: {e}')
        "

    - name: Generate demo validation report
      run: |
        echo "# Demo Validation Report" > demo-validation-report.md
        echo "" >> demo-validation-report.md
        echo "**Date:** $(date)" >> demo-validation-report.md
        echo "**Commit:** ${{ github.sha }}" >> demo-validation-report.md
        echo "**Branch:** ${{ github.ref_name }}" >> demo-validation-report.md
        echo "" >> demo-validation-report.md
        echo "## Status" >> demo-validation-report.md
        echo "All demos and tests completed successfully" >> demo-validation-report.md    - name: Upload validation artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: demo-validation-results
        path: |
          demo-validation-report.md
          *.png
          *.pdf
          *.html
